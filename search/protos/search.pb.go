// Code generated by protoc-gen-go.
// source: search.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	search.proto

It has these top-level messages:
	Request
	Result
	Results
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Request struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Result struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=Content" json:"Content,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Results struct {
	Res []*Result `protobuf:"bytes,1,rep,name=res" json:"res,omitempty"`
}

func (m *Results) Reset()                    { *m = Results{} }
func (m *Results) String() string            { return proto.CompactTextString(m) }
func (*Results) ProtoMessage()               {}
func (*Results) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Results) GetRes() []*Result {
	if m != nil {
		return m.Res
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "protos.Request")
	proto.RegisterType((*Result)(nil), "protos.Result")
	proto.RegisterType((*Results)(nil), "protos.Results")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Google service

type GoogleClient interface {
	// Search returns a Google search result for the query.
	Search(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Results, error)
}

type googleClient struct {
	cc *grpc.ClientConn
}

func NewGoogleClient(cc *grpc.ClientConn) GoogleClient {
	return &googleClient{cc}
}

func (c *googleClient) Search(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Results, error) {
	out := new(Results)
	err := grpc.Invoke(ctx, "/protos.Google/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Google service

type GoogleServer interface {
	// Search returns a Google search result for the query.
	Search(context.Context, *Request) (*Results, error)
}

func RegisterGoogleServer(s *grpc.Server, srv GoogleServer) {
	s.RegisterService(&_Google_serviceDesc, srv)
}

func _Google_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GoogleServer).Search(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Google_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Google",
	HandlerType: (*GoogleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Google_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x4d, 0x2c,
	0x4a, 0xce, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0x12, 0x5c,
	0xec, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xbc, 0x5c, 0xac, 0x40, 0x46, 0x51, 0xa5,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0xa7, 0x92, 0x29, 0x17, 0x5b, 0x50, 0x6a, 0x71, 0x69, 0x0e, 0x58,
	0xa2, 0x24, 0xb3, 0x24, 0x27, 0x15, 0x22, 0x21, 0xc4, 0xcd, 0xc5, 0x5c, 0x5a, 0x94, 0x23, 0xc1,
	0x04, 0xe6, 0xf0, 0x73, 0xb1, 0x3b, 0xe7, 0xe7, 0x95, 0xa4, 0xe6, 0x95, 0x48, 0x30, 0x83, 0xb5,
	0xa9, 0x81, 0x0c, 0x04, 0x69, 0x2b, 0x16, 0x92, 0xe6, 0x62, 0x2e, 0x4a, 0x2d, 0x06, 0xea, 0x62,
	0xd6, 0xe0, 0x36, 0xe2, 0x83, 0x58, 0x5c, 0xac, 0x07, 0x91, 0x35, 0x32, 0xe3, 0x62, 0x73, 0xcf,
	0xcf, 0x4f, 0xcf, 0x49, 0x15, 0xd2, 0xe1, 0x62, 0x0b, 0x06, 0x3b, 0x4d, 0x88, 0x1f, 0xa1, 0x06,
	0xec, 0x24, 0x29, 0x7e, 0x54, 0x4d, 0xc5, 0x4a, 0x0c, 0x4e, 0x40, 0x0b, 0x53, 0x2b, 0xf4, 0xd2,
	0x8b, 0x0a, 0x92, 0x17, 0x31, 0x31, 0x07, 0x85, 0xb8, 0x27, 0x41, 0x7c, 0x62, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x64, 0x98, 0x22, 0x91, 0xe0, 0x00, 0x00, 0x00,
}
